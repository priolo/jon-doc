"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[405],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={id:"quick-start",title:"Quick start",sidebar_label:"Quick start",sidebar_position:1},i=void 0,l={unversionedId:"quick-start",id:"quick-start",title:"Quick start",description:"Installation",source:"@site/docs/1-quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/jon-doc/docs/quick-start",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"quick-start",title:"Quick start",sidebar_label:"Quick start",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Why",permalink:"/jon-doc/docs/why"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Create STORE and VIEW",id:"create-store-and-view",level:2},{value:"What we have done?",id:"what-we-have-done",level:2},{value:"github: Complete Project",id:"github-complete-project",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Create a new app with your favourite tool (CRA, Parcel, Vite...)",(0,a.kt)("br",{parentName:"p"}),"\n","Install Jon"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="npm"',title:'"npm"'},"npm install @priolo/jon\n")),(0,a.kt)("h2",{id:"create-store-and-view"},"Create STORE and VIEW"),(0,a.kt)("p",null,"Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"App.jsx")," with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/App.jsx"',title:'"/src/App.jsx"'},'import React from "react";\nimport { createRoot } from "react-dom/client";\nimport { createStore, useStore } from \'@priolo/jon\';\n\n// create STORE-SETUP\nconst mySetup = {\n    // The immutable single source of truth.\n    state: {\n        value: "init value"\n    },\n    // Pure functions return a "processed" value of the STATE.\n    getters: {      \n        getUppercase: (state, _, store) => state.value.toUpperCase()\n    },\n    // They do things! For example: here you have to put API calls to the server\n    actions: {\n        addAtEnd: (state, payload, store) => {\n            store.setValue(state.value + payload)\n        }\n    },\n    // The only ones that can replace the STATE with a new one.\n    // NOTE: JON merges the returned property with the previous STATE.\n    mutators: {\n        setValue: (state, value, store) => ({value})\n    }\n}\n\n// create STORE\nconst myStore = createStore(mySetup)\n\n// use STORE in VIEW\nfunction App() {\n\n    // picks up the current STATE of the "myStore" STORE\n    const state = useStore(myStore)\n\n    // call ACTION. NOTE:  you must pass ONLY the "payload"\n    const handleClick = e => myStore.addAtEnd("!")\n\n    // render\n    return (<div>\n        <h1>{state.value}</h1><h2>{myStore.getUppercase()}</h2>\n        <input \n            value={state.value} \n            // call MUTATOR. NOTE: you must pass ONLY the "payload"\n            onChange={(e)=>myStore.setValue(e.target.value)} \n        />\n        <button onClick={handleClick}>add !</button>\n    </div>);\n}\n\n// React 18\nconst root = createRoot(document.getElementById(\'root\'))\nroot.render(<React.StrictMode><App /></React.StrictMode>)\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/example-1-5d2tt"},"codesandbox")),(0,a.kt)("h2",{id:"what-we-have-done"},"What we have done?"),(0,a.kt)("p",null,"We have implemented a React STORE-PATTERN with JON",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://refactoring.guru/design-patterns/state"},"https://refactoring.guru/design-patterns/state"),(0,a.kt)("br",{parentName:"p"}),"\n","In practice: When a MUTATOR of STORE is executed in VIEW",(0,a.kt)("br",{parentName:"p"}),"\n","the listeners of the STORE update the hooks of the components they use.",(0,a.kt)("br",{parentName:"p"}),"\n",'The result is that the component always shows the "current" STATE of the STORE.'),(0,a.kt)("p",null,"If you are interested in a complete project example...  "),(0,a.kt)("h3",{id:"github-complete-project"},(0,a.kt)("a",{parentName:"h3",href:"https://github.com/priolo/jon-template"},"github: Complete Project")))}u.isMDXComponent=!0}}]);