"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[213],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,h=m["".concat(i,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6949:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={id:"store-setup",title:"Store Setup",sidebar_label:"Store Setup",sidebar_position:3},s=void 0,l={unversionedId:"store-setup",id:"store-setup",title:"Store Setup",description:"OK! I'll give you a chance",source:"@site/docs/3-store-setup.md",sourceDirName:".",slug:"/store-setup",permalink:"/jon-doc/docs/store-setup",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"store-setup",title:"Store Setup",sidebar_label:"Store Setup",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Why",permalink:"/jon-doc/docs/why"},next:{title:"Store",permalink:"/jon-doc/docs/store"}},i={},u=[{value:"STATE",id:"state",level:2},{value:"Rules",id:"rules",level:3},{value:"GETTERS",id:"getters",level:2},{value:"Rules",id:"rules-1",level:3},{value:"ACTIONS",id:"actions",level:2},{value:"Rules",id:"rules-2",level:3},{value:"MUTATORS",id:"mutators",level:2},{value:"Rules",id:"rules-3",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"OK! I'll give you a chance")),(0,a.kt)("p",null,"Thank you! First let's see what's inside the STORE-SETUP",(0,a.kt)("br",{parentName:"p"}),"\n","This object then allows you to instantiate a STORE with `createStore "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { createStore } from "@priolo/jon"\n\nconst mySetup = {\n    state: {\n        value: "init value"\n    },\n    getters: {\n        getUppercase: (_, store) => store.state.value.toUpperCase()\n    },\n    actions: {\n        addAtEnd: (char, store) => {\n            store.setValue(store.state.value + char)\n        }\n    },\n    mutators: {\n        setValue: (value, store) => ({value})\n    }\n}\n\nconst myStore = createStore(mySetup)\n')),(0,a.kt)("h2",{id:"state"},"STATE"),(0,a.kt)("p",null,"This is the data required to render the page.",(0,a.kt)("br",{parentName:"p"}),"\n","For example: the selected tab, the texts in the text boxes, the array for lists, etc. etc.",(0,a.kt)("br",{parentName:"p"}),"\n","In short: changing the STATE changes the interface accordingly.\nSo we have very cool features: Automatic Tests, Remote Synchronizations, Time Travel, Microfrontend ...  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { createStore, useStore } from "@priolo/jon"\n\nconst store = createStore({\n    state: {\n        theTrue: "42",\n    }\n})\n\nconst MyComponent = function () {\n    const state = useStore(store)\n    return <div>The true is: {state.theTrue}</div>\n}\n')),(0,a.kt)("h3",{id:"rules"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The STATE is a JSON so there should be no complex objects (only string or number)",(0,a.kt)("br",{parentName:"li"}),"and ESPECIALLY no reference to external objects!  "),(0,a.kt)("li",{parentName:"ul"},"It is IMMUTABLE. That is, if I have a STATE it always displays the same VIEW  ")),(0,a.kt)("h2",{id:"getters"},"GETTERS"),(0,a.kt)("p",null,"They are functions that return a value ... typically a property of the STATE being processed.",(0,a.kt)("br",{parentName:"p"}),"\n","A classic example is the concatenation of the first and last name:  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { createStore } from "@priolo/jon"\n\nconst store = createStore({\n    state: {\n        firstName: "Ivano",\n        lastName: "Iorio"\n    },\n    getters: {\n        getName: (_, store) => `${store.state.firstName} ${store.state.lastName}`,\n        // or...\n        getName: (_, {state}) => `${state.firstName} ${state.lastName}`,\n    }\n})\n\nconsole.log( store.getName() )\n// Ivano Iorio\n')),(0,a.kt)("h3",{id:"rules-1"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"They are PURE FUNCTIONS and",(0,a.kt)("br",{parentName:"li"}),"can only use the STATE and other GETTERS of the same STORE in addition, of course, to the ",(0,a.kt)("inlineCode",{parentName:"li"},"payload")),(0,a.kt)("li",{parentName:"ul"},"Always return a value"),(0,a.kt)("li",{parentName:"ul"},"However ALL the functions of the STORE have this signature:",(0,a.kt)("br",{parentName:"li"}),(0,a.kt)("inlineCode",{parentName:"li"},"(payload:any|null, store:Store) => any"),"  ")),(0,a.kt)("h2",{id:"actions"},"ACTIONS"),(0,a.kt)("p",null,"They make something happen!",(0,a.kt)("br",{parentName:"p"}),"\n","The only functions that can access external APIs (for example send/upload data to the BE).",(0,a.kt)("br",{parentName:"p"}),"\n","They call the GETTERS and SETTERS to organize the STORE.",(0,a.kt)("br",{parentName:"p"}),"\n","In short, if you press a button there will be an ACTION to manage that task. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { createStore } from "@priolo/jon"\n\nconst store = createStore({\n    state: {\n        firstName: "Ivano",\n        lastName: "Iorio"\n    },\n    actions: {\n        print: (pref, {state}) => {\n            const output = `${pref} ${state.firstName} ${state.lastName}`\n            console.log( output )\n        }\n    }\n})\n\nstore.print("Mr.")\n// Mr. Ivano Iorio\n')),(0,a.kt)("h3",{id:"rules-2"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"They can be ",(0,a.kt)("inlineCode",{parentName:"li"},"async")," "),(0,a.kt)("li",{parentName:"ul"},"They can call external functions or ACTIONS from another STORE"),(0,a.kt)("li",{parentName:"ul"},"These functions also have signature:",(0,a.kt)("br",{parentName:"li"}),(0,a.kt)("inlineCode",{parentName:"li"},"(payload:any|null, store:Store) => any"))),(0,a.kt)("h2",{id:"mutators"},"MUTATORS"),(0,a.kt)("p",null,"The 'mutators' create a new modified STATE",(0,a.kt)("br",{parentName:"p"}),"\n","and replace it with the current STATE (a STATE is immutable!).",(0,a.kt)("br",{parentName:"p"}),"\n","They then notify the COMPONENTs (which use the STORE) to render  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { createStore } from "@priolo/jon"\n\nconst store = createStore({\n    state: {\n        firstName: "Ivano",\n        lastName: "Iorio"\n    },\n    actions: { ... },\n    mutators: {\n        setFirstName: firstName => ({firstName}),\n        setLastName: lastName => ({lastName})\n    }\n})\n\nstore.setFirstName("Maria")\nstore.setLastName("Rossi")\nstore.print("Miss.")\n// Miss. Maria Rossi\n')),(0,a.kt)("h3",{id:"rules-3"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the only functions that can replace one STATE with another STATE",(0,a.kt)("br",{parentName:"li"}),"(STATEs are by themselves immutable)"),(0,a.kt)("li",{parentName:"ul"},"They accept a STATE and possibly a paylod and return the new modified STATE"),(0,a.kt)("li",{parentName:"ul"},"This one also has the same signature as the others:",(0,a.kt)("br",{parentName:"li"}),(0,a.kt)("inlineCode",{parentName:"li"},"(payload:any|null, store:Store) => any"))))}c.isMDXComponent=!0}}]);